module.exports=function(){function Complex(re=0,im=0){this.re=re;this.im=im}const msgs={errNotNumeric:"{0} must be a number.",errTypeInvalid:"The type of the {0} is invalid."};Complex.prototype.getMsg=function(key,repArr=null){const msg=msgs[key];return repArr?msg.replace(/{(\d+)}/g,((match,i)=>repArr[i]!==undefined?repArr[i]:match)):msg};Complex.prototype.setRe=function(re){if(typeof re!=="number"){throw new Error(this.getMsg("errNotNumeric",["Specified real value"]))}this.re=re;return this};Complex.prototype.setIm=function(im){if(typeof im!=="number")throw new Error(this.getMsg("errNotNumeric",["Specified imaginary value"]));this.im=im;return this};Complex.prototype.setRectCoords=function(re,im){if(typeof re!=="number"||typeof im!=="number")throw new Error(this.getMsg("errNotNumeric",["Specified real value and imaginary value"]));this.re=re;this.im=im;return this};Complex.prototype.setPolarCoords=function(r,phi){if(typeof r!=="number"||typeof phi!=="number")throw new Error(this.getMsg("errNotNumeric",["Specified r(radius) value and phi(angle) value"]));return this.setRectCoords(r*Math.cos(phi),r*Math.sin(phi))};Complex.prototype.setPrecision=function(prec){if(typeof prec!=="number")throw new Error(this.getMsg("errNotNumeric",["Specified precision value"]));return this.setRectCoords(Number(this.re.toPrecision(prec)),Number(this.im.toPrecision(prec)))};Complex.prototype.setFixed=function(digs){if(typeof digs!=="number"){throw new Error(this.getMsg("errNotNumeric",["Specified digs value"]))}return this.setRectCoords(Number(this.re.toFixed(digs)),Number(this.im.toFixed(digs)))};Complex.prototype.setFromValue=function(value){if(value instanceof Complex)return new Complex(value.re,value.im);if(typeof value==="string"){if(value==="i")value="0+1i";const match=value.match(/(\d+)?([\+\-]\d*)[ij]/);if(match){const re=match[1];const im=match[2]==="+"||match[2]==="-"?match[2]+"1":match[2];return new Complex(+re||0,+im||0)}}if(typeof value==="number")return new Complex(value,0);throw new Error(this.getMsg("errTypeInvalid",["Specified value"]))};Complex.prototype.getMagnitude=function(){return Math.sqrt(this.re*this.re+this.im*this.im)};Complex.prototype.getAngle=function(){return Math.atan2(this.im,this.re)};Complex.prototype.setConjugate=function(){return this.setRectCoords(this.re,-this.im)};Complex.prototype.setNegate=function(){return this.setRectCoords(-this.re,-this.im)};Complex.prototype.finalize=function(){this.setRectCoords=function(a,b){return new Complex(a,b)};if(Object.defineProperty){Object.defineProperty(this,"re",{writable:false,value:this.re});Object.defineProperty(this,"im",{writable:false,value:this.im})}return this};Complex.prototype.setMultiply=function(value){const cpx=this.setFromValue(value);return this.setRectCoords(this.re*cpx.re-this.im*cpx.im,this.im*cpx.re+this.re*cpx.im)};Complex.prototype.setDivide=function(value){const cpx=this.setFromValue(value);const div=Math.pow(cpx.re,2)+Math.pow(cpx.im,2);return this.setRectCoords((this.re*cpx.re+this.im*cpx.im)/div,(this.im*cpx.re-this.re*cpx.im)/div)};Complex.prototype.setAdd=function(value){const cpx=this.setFromValue(value);return this.setRectCoords(this.re+cpx.re,this.im+cpx.im)};Complex.prototype.setSubtract=function(value){const cpx=this.setFromValue(value);return this.setRectCoords(this.re-cpx.re,this.im-cpx.im)};Complex.prototype.getClone=function(){return new Complex(this.re,this.im)};Complex.prototype.getExp=function(){return this.setPolarCoords(Math.exp(this.re),this.im)};Complex.prototype.setLog=function(rotation){if(!rotation)rotation=0;return this.setRectCoords(Math.log(this.getMagnitude()),this.getAngle()+rotation*2*Math.PI)};Complex.prototype.setPow=function(value){const cpx=this.setFromValue(value);const result=cpx.setMultiply(this.getClone().setLog()).getExp();return this.setRectCoords(result.re,result.im)};Complex.prototype.setSqrt=function(){const abs=this.getMagnitude(),sgn=this.im<0?-1:1;return this.setFromValue(Math.sqrt((abs+this.re)/2),sgn*Math.sqrt((abs-this.re)/2))};return Complex}();