module.exports=function(){function Complex(re=0,im=0){this.re=re;this.im=im}const msgs={errNotNumeric:"{0} must be a number.",errTypeInvalid:"The type of the {0} is invalid."};Complex.prototype.getMsg=function(key,repArr=null){const msg=msgs[key];return repArr?msg.replace(/{(\d+)}/g,((match,i)=>repArr[i]!==undefined?repArr[i]:match)):msg};Complex.prototype.setRe=function(re){if(typeof re!=="number"){throw new Error(this.getMsg("errNotNumeric",["Specified real value"]))}this.re=re;return this};Complex.prototype.setIm=function(im){if(typeof im!=="number")throw new Error(this.getMsg("errNotNumeric",["Specified imaginary value"]));this.im=im;return this};Complex.prototype.rectCoords=function(re,im){if(typeof re!=="number"||typeof im!=="number")throw new Error(this.getMsg("errNotNumeric",["Specified real value and imaginary value"]));this.re=re;this.im=im;return this};Complex.prototype.polarCoords=function(r,phi){if(typeof r!=="number"||typeof phi!=="number")throw new Error(this.getMsg("errNotNumeric",["Specified r(radius) value and phi(angle) value"]));return this.rectCoords(r*Math.cos(phi),r*Math.sin(phi))};Complex.prototype.precision=function(prec){if(typeof prec!=="number")throw new Error(this.getMsg("errNotNumeric",["Specified precision value"]));return this.rectCoords(Number(this.re.toPrecision(prec)),Number(this.im.toPrecision(prec)))};Complex.prototype.fixed=function(digs){if(typeof digs!=="number"){throw new Error(this.getMsg("errNotNumeric",["Specified digs value"]))}return this.rectCoords(Number(this.re.toFixed(digs)),Number(this.im.toFixed(digs)))};Complex.prototype.fromValue=function(value){if(value instanceof Complex)return new Complex(value.re,value.im);if(typeof value==="string"){if(value==="i")value="0+1i";const match=value.match(/(\d+)?([\+\-]\d*)[ij]/);if(match){const re=match[1];const im=match[2]==="+"||match[2]==="-"?match[2]+"1":match[2];return new Complex(+re||0,+im||0)}}if(typeof value==="number")return new Complex(value,0);throw new Error(this.getMsg("errTypeInvalid",["Specified value"]))};Complex.prototype.getMagnitude=function(){return Math.sqrt(this.re*this.re+this.im*this.im)};Complex.prototype.getAngle=function(){return Math.atan2(this.im,this.re)};Complex.prototype.conjugate=function(){return this.rectCoords(this.re,-this.im)};Complex.prototype.negate=function(){return this.rectCoords(-this.re,-this.im)};Complex.prototype.finalize=function(){this.rectCoords=function(a,b){return new Complex(a,b)};if(Object.defineProperty){Object.defineProperty(this,"re",{writable:false,value:this.re});Object.defineProperty(this,"im",{writable:false,value:this.im})}return this};Complex.prototype.multiply=function(value){const cpx=this.fromValue(value);return this.rectCoords(this.re*cpx.re-this.im*cpx.im,this.im*cpx.re+this.re*cpx.im)};Complex.prototype.divide=function(value){const cpx=this.fromValue(value);const div=Math.pow(cpx.re,2)+Math.pow(cpx.im,2);return this.rectCoords((this.re*cpx.re+this.im*cpx.im)/div,(this.im*cpx.re-this.re*cpx.im)/div)};Complex.prototype.add=function(value){const cpx=this.fromValue(value);return this.rectCoords(this.re+cpx.re,this.im+cpx.im)};Complex.prototype.subtract=function(value){const cpx=this.fromValue(value);return this.rectCoords(this.re-cpx.re,this.im-cpx.im)};Complex.prototype.getClone=function(){return new Complex(this.re,this.im)};Complex.prototype.exp=function(){return this.polarCoords(Math.exp(this.re),this.im)};Complex.prototype.log=function(rotation){if(!rotation)rotation=0;return this.rectCoords(Math.log(this.getMagnitude()),this.getAngle()+rotation*2*Math.PI)};Complex.prototype.pow=function(value){const cpx=this.fromValue(value);const result=cpx.multiply(this.getClone().log()).exp();return this.rectCoords(result.re,result.im)};Complex.prototype.sqrt=function(){const abs=this.getMagnitude(),sgn=this.im<0?-1:1;return this.fromValue(Math.sqrt((abs+this.re)/2),sgn*Math.sqrt((abs-this.re)/2))};Complex.prototype.getSinh=function(value){return(Math.pow(Math.E,value)-Math.pow(Math.E,-value))/2};Complex.prototype.getCosh=function(value){return(Math.pow(Math.E,value)+Math.pow(Math.E,-value))/2};Complex.prototype.sin=function(){const re=this.re,im=this.im;return this.rectCoords(Math.sin(re)*this.getCosh(im),Math.cos(re)*this.getSinh(im))};Complex.prototype.cos=function(){const re=this.re,im=this.im;return this.rectCoords(Math.cos(re)*this.getCosh(im),Math.sin(re)*this.getSinh(im)*-1)};Complex.prototype.tan=function(){const re=this.re,im=this.im,divident=Math.cos(2*re)+this.getCosh(2*im);return this.rectCoords(Math.sin(2*re)/divident,this.getSinh(2*im)/divident)};Complex.prototype.sinh=function(){const re=this.re,im=this.im;return this.rectCoords(this.getSinh(re)*Math.cos(im),this.getCosh(re)*Math.sin(im))};Complex.prototype.cosh=function(){const re=this.re,im=this.im;return this.rectCoords(this.getCosh(re)*Math.cos(im),this.getSinh(re)*Math.sin(im))};Complex.prototype.tanh=function(){const re=this.re,im=this.im,divident=this.getCosh(2*re)+Math.cos(2*im);return this.rectCoords(this.getSinh(2*re)/divident,Math.sin(2*im)/divident)};Complex.prototype.getString=function(){var ret="",a=this.re,b=this.im;if(a)ret+=a;if(a&&b||b<0)ret+=b<0?"-":"+";if(b){var absIm=Math.abs(b);if(absIm!=1)ret+=absIm;ret+="i"}return ret||"0"};Complex.prototype.getStringPolarCoords=function(){return this.getMagnitude()+" "+this.getAngle()};Complex.prototype.getEquals=function(value){const cpx=this.fromValue(value);return cpx.re===this.re&&cpx.im===this.im};return Complex}();